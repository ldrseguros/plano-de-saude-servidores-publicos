import {
  enviarEmailAdesao,
  testarConfiguracaoEmail,
} from "./src/services/emailService.js";
import dotenv from "dotenv";

// Carrega vari√°veis de ambiente
dotenv.config();

console.log("üîç DIAGN√ìSTICO DE EMAIL - TESTANDO NOVO FORMATO\n");
console.log("=".repeat(50));

// 1. Verificar vari√°veis de ambiente
console.log("üìã 1. VERIFICANDO CONFIGURA√á√ïES:");
console.log("   EMAIL_HOST:", process.env.EMAIL_HOST || "‚ùå N√ÉO CONFIGURADO");
console.log("   EMAIL_PORT:", process.env.EMAIL_PORT || "‚ùå N√ÉO CONFIGURADO");
console.log(
  "   EMAIL_SECURE:",
  process.env.EMAIL_SECURE || "‚ùå N√ÉO CONFIGURADO"
);
console.log("   EMAIL_USER:", process.env.EMAIL_USER || "‚ùå N√ÉO CONFIGURADO");
console.log(
  "   EMAIL_PASSWORD:",
  process.env.EMAIL_PASSWORD ? "‚úÖ CONFIGURADO (****)" : "‚ùå N√ÉO CONFIGURADO"
);
console.log(
  "   EMAIL_NOTIFICACAO:",
  process.env.EMAIL_NOTIFICACAO || "‚ùå N√ÉO CONFIGURADO"
);
console.log();

// 2. Testar configura√ß√£o
console.log("üß™ 2. TESTANDO CONFIGURA√á√ÉO SMTP:");
try {
  const testeConfig = await testarConfiguracaoEmail();
  if (testeConfig.success) {
    console.log("   ‚úÖ Configura√ß√£o SMTP v√°lida!");
  } else {
    console.log("   ‚ùå Erro na configura√ß√£o:", testeConfig.error);
    process.exit(1);
  }
} catch (error) {
  console.log("   ‚ùå Erro ao testar configura√ß√£o:", error.message);
  process.exit(1);
}
console.log();

// 3. Dados de teste com formato atualizado
const adesaoTeste = {
  nome: "Maria Silva Santos (TESTE DIAGN√ìSTICO)",
  email: "maria.teste@email.com",
  telefone: "(62) 99999-8888",
  plano: "Plano Apartamento + Odontol√≥gico",
  valor: "R$ 683,00",
  data: new Date().toLocaleDateString("pt-BR"),
  pdfUrl: null,
  dadosPlano: {
    nome: "Plano Apartamento + Odontol√≥gico",
    valorTitular: "R$ 236,00",
    valorDependentes: "R$ 472,00",
    valorTotal: "R$ 708,00",
    quantidadeDependentes: 2,
    odontologico: true,
    detalhes: {
      planoBase: "Plano Apartamento",
      precoBase: 211,
      adicionalOdonto: 25,
      dependentes: [
        { nome: "Jo√£o Silva Santos", parentesco: "C√¥njuge" },
        { nome: "Ana Silva Santos", parentesco: "Filha" },
      ],
    },
  },
};

console.log("üìß 3. ENVIANDO EMAIL DE TESTE COM NOVO FORMATO:");
console.log("   De:", process.env.EMAIL_USER);
console.log("   Para:", process.env.EMAIL_NOTIFICACAO);
console.log("   Dados:", JSON.stringify(adesaoTeste, null, 2));
console.log();

// 4. Enviar email
try {
  console.log("   ‚è≥ Enviando email...");
  const resultado = await enviarEmailAdesao(adesaoTeste);

  if (resultado.success) {
    console.log("   ‚úÖ EMAIL ENVIADO COM SUCESSO!");
    console.log("   üì® Message ID:", resultado.messageId);
    console.log("   üéØ Verifique o email em:", process.env.EMAIL_NOTIFICACAO);
    console.log("   üìÅ Tamb√©m verifique a pasta SPAM/LIXO ELETR√îNICO");
    console.log("   üìä O email deve conter:");
    console.log("     - Dados detalhados do plano");
    console.log("     - Lista de dependentes");
    console.log("     - Valores discriminados");
    console.log("     - Layout moderno e profissional");
  } else {
    console.log("   ‚ùå Falha no envio:", resultado);
  }
} catch (error) {
  console.log("   ‚ùå ERRO NO ENVIO:");
  console.log("   üìÑ Mensagem:", error.message);
  console.log("   üîç C√≥digo:", error.code);
  console.log("   üåê Comando:", error.command);

  // Erros comuns
  if (error.code === "EAUTH") {
    console.log("\nüí° SOLU√á√ÉO PROV√ÅVEL:");
    console.log("   1. Verifique se a senha de app est√° correta");
    console.log("   2. Confirme que a verifica√ß√£o em 2 etapas est√° ativa");
    console.log("   3. Gere uma nova senha de app se necess√°rio");
  } else if (error.code === "ETIMEDOUT" || error.code === "ENOTFOUND") {
    console.log("\nüí° SOLU√á√ÉO PROV√ÅVEL:");
    console.log("   1. Verifique sua conex√£o com a internet");
    console.log("   2. Confirme as configura√ß√µes de HOST e PORT");
  } else if (error.code === "ECONNECTION") {
    console.log("\nüí° SOLU√á√ÉO PROV√ÅVEL:");
    console.log(
      "   1. Verifique se EMAIL_SECURE est√° configurado corretamente"
    );
    console.log('   2. Para Gmail use: EMAIL_SECURE="false"');
  }
}

console.log("\n" + "=".repeat(50));
console.log("üéâ TESTE CONCLU√çDO");
